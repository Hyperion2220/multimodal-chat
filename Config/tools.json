[
	{
		"toolSpec": {
			"name": "python",
			"description": "Run a Python script. Use this for numerical and symbolical computations, to manipulate dates and times, and to generate charts, diagrams, or QR codes. Your code can access the internet. To see the output, you must print() results. Save image files (and no other formats) in /tmp. These files are deleted after the script finishes.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"script": {
							"type": "string",
							"description": "The Python script to run. It can run for up to 30 seconds. The running time should be as low as possible. Keep the code simple and elegant."
						},
						"number_of_images": {
							"type": "integer",
							"description": "The number of images in output."
						},
						"install_modules": {
							"type": "array",
							"description": "The list of additional Python modules to install. These modules are installed in a temporary directory. Installations must be repeated every time you use this tool. The list contains the names of Python modules separated by commas. The list can be empty. For example: ['numpy', 'pandas'] or []. The Python standard library and the following modules are already installed: <modules>requests, beautifulsoup4, feedparser, numpy, pandas, mpmath, numba, tabulate, matplotlib, networkx, yfinance, qrcode, scikit-learn, umap-learn, sympy</modules>. ",
							"items": {
								"type": "string"
							}
						}
					},
					"required": [
						"script",
						"number_of_images",
						"install_modules"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "duckduckgo_text_search",
			"description": "Use DuckDuckGo text WWW search engine. Browse the URL links in the response for more information.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"keywords": {
							"type": "string",
							"description": "The search terms to look for."
						}
					},
					"required": [
						"keywords"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "duckduckgo_news_search",
			"description": "DuckDuckGo news search engine. Use this to find what happened recently. Always browse the URL links in the response for more information.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"keywords": {
							"type": "string",
							"description": "The search terms to look for."
						}
					},
					"required": [
						"keywords"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "duckduckgo_images_search",
			"description": "DuckDuckGo images search engine. Use this to search for publicly available images.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"keywords": {
							"type": "string",
							"description": "The search terms to look for."
						}
					},
					"required": [
						"keywords"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "wikipedia_search",
			"description": "Search Wikipedia for pages relete to your query. Returns a list of Wikipedia page titles. Use this tool for Wikipedia content.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"query": {
							"type": "string",
							"description": "The query to use to look for relevant Wikipedia pages."
						}
					},
					"required": [
						"query"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "wikipedia_geodata_search",
			"description": "Search Wikipedia by location. Use this to search for articles related to a location. Returns a list of Wikipedia page titles.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"latitude": {
							"type": "number",
							"description": "The latitude for the geo search."
						},
						"longitude": {
							"type": "number",
							"description": "The longitude for the geo search."
						},
						"title": {
							"type": "string",
							"description": "The title of the Wikipedia page to get."
						},
						"radius": {
							"type": "number",
							"description": "Search radius in meters. The value must be between 10 and 10000."
						}
					},
					"required": [
						"latitude",
						"longitude"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "wikipedia_page",
			"description": "Get a Wikipedia page by title. This is the preferred tool to get the full content of a Wikipedia page. The page content is stored in the archive. Pass keywords to retrieve specific information from the archive. Use links in the page to browse other pages or other web sites and get more information.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"title": {
							"type": "string",
							"description": "The title of the Wikipedia page to get."
						},
						"keywords": {
							"type": "string",
							"description": "The keywords to retrieve information for this page. Keywords should be specific to the content and topic you want to retrieve. Avoid generic terms like 'latest news' or 'general information'."
						}
					},
					"required": [
						"title",
						"keywords"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "browser",
			"description": "Use this tool to browse and read carefully a web page on the internet. You can then browse the URL links in the response for more information. The web site content is stored in the archive so that you can retieve the information you need. Pass keywords to retrieve specific information from the archive. Use links in the page to browse other pages or other web sites and get more information. You can also browse links to PDF and PPTX files.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"url": {
							"type": "string",
							"description": "The public URL link (https://...) to browse."
						},
						"keywords": {
							"type": "string",
							"description": "The keywords to retrieve information for this page. Keywords should be specific to the content and topic you want to retrieve. Avoid generic terms like 'latest news' or 'general information'."
						}
					},
					"required": [
						"url",
						"keywords"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "retrive_from_archive",
			"description": "This is your personal archive from which you can retrieve information by keywords. To use this tool correctly, make more than one requests with different keywords (for example, one per URL or per page) instead of a single large request. It can return Markdown or HTML, including links that you can browse with other tools. If you don't find the info you need, you can browse or search the internet or use wikipedia to get more info.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"keywords": {
							"type": "string",
							"description": "The keywords to retrieve information from the archive. Keywords should be specific to the content and topic you want to retrieve. Avoid generic terms like 'latest news' or 'general information'."
						}
					},
					"required": [
						"keywords"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "store_in_archive",
			"description": "This is your personal archive. You can use this tool to store text, Markdown, or HTML content that you can later retrieve by keywords.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"content": {
							"type": "string",
							"description": "The text, Markdown, or HTML content to store in the archive."
						}
					},
					"required": [
						"content"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "sketchbook",
			"description": "Use this tool to write, review, and update text content in one or more sketchbooks. For each sketchbook, content is stored in sections that you can add, review, update, or delete sequentially, one at a time. Separate topics in different sections. You can add a section at the end, ask for info (the number of sections, words, and characters in the sketchbook), start a review, update the current section, or delete the current section. Use this tool to write content like articles, blog posts, essays, chapters, books, and more.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string",
							"description": "The ID uniquely identifying a sketchbook."
						},
						"command": {
							"type": "string",
							"description": "How to use the sketchbook, can be 'start_new_with_content', 'add_section_at_the_end', 'info', 'start_review', 'next_section', 'update_current_section', 'delete_current_section', 'save_sketchbook', or 'delete_sketchbook'. Don't save the sketchbook unless I explicitly ask you to do so. Before saving, ask which format I want to save the sketchbook in."
						},
						"content": {
							"type": "string",
							"description": "The content for a new section or to update the current section. Use Markdown to format content. Don't add triple dots (...) or comments like 'to be continued' between sections. Each section can contain thousands of words. Only include images that are stored in the image archive. To include an image, add a line with the format '[image_id: <image_id>]' where <image_id> is an exact image ID in the image catalog. Check that the image ID is valid by searching in the image catalog. If you need a new image, you can download it, generate it, or use Python to render a chart or a diagram."
						},
						"filename": {
							"type": "string",
							"description": "The filename (without extension) to save the sketchbook to. I'll append the current date and time to the filename to make it unique."
						},
						"format": {
							"type": "string",
							"description": "The format to save the sketchbook in, can be 'md' (for Markdown) or 'docx' (for Word)."
						}
					},
					"required": [
						"id",
						"command"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "checklist",
			"description": "Use this tool to track your progress. You can have multiple checklists with different IDs. You can add items at the beginning or at the end, show the current items, or mark items as completed. Before marking an item as completed, ask yourself if there is something you can improve. If so, add the improvement to the beginning or the end of the checklist.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string",
							"description": "The ID uniquely identifying a checklist."
						},
						"action": {
							"type": "string",
							"description": "How to use the checklist, can be 'start_new_with_items', 'add_items_at_the_beginning', 'add_items_at_the_end', 'show_items', 'mark_next_n_items_as_completed'."
						},
						"items": {
							"type": "array",
							"description": "The list of items to add. The list can contain one or more items.",
							"items": {
								"type": "string"
							}
						},
						"n": {
							"type": "integer",
							"description": "The number of next to-do items to mark as completed."
						}
					},
					"required": [
						"id",
						"command"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "generate_image",
			"description": "With this tool, you can generate/create a new image based on a text-to-image prompt. Don't use this tool when asked to show, search, or find an image. Don't use this tool for charts or diagrams. Generate an image only if I explicitly asks to generate, create, or draw an image. The output image is stored in the image catalog and is shown to me.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"prompt": {
							"type": "string",
							"description": "The text-to-image prompt to use."
						}
					},
					"required": [
						"prompt"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "search_image_catalog",
			"description": "Find images in the image catalog by description.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"description": {
							"type": "string",
							"description": "The image description to search for."
						},
						"max_results": {
							"type": "integer",
							"description": "The max number of results."
						}
					},
					"required": [
						"description"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "similarity_image_catalog",
			"description": "Search for images similar to a reference image you provide. Use this tool when asked for a similar image. Trust the result of this tool even if the description seems to be not what you expect.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"image_id": {
							"type": "string",
							"description": "The 'image_id' of the reference image for which you search for similarity."
						},
						"max_results": {
							"type": "integer",
							"description": "The max number of results."
						}
					},
					"required": [
						"image_id"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "random_images",
			"description": "Get random images from the image catalog.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"num": {
							"type": "string",
							"description": "The number of random images to get."
						}
					},
					"required": [
						"num"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "get_image_by_id",
			"description": "Get info on an image by its 'image_id'. This tool can also be used to check that an image_id is valid and exists in the image catalog.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"image_id": {
							"type": "string",
							"description": "The 'image_id' of the image to get."
						}
					},
					"required": [
						"image_id"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "image_catalog_count",
			"description": "Get the number of images in the image catalog.",
			"inputSchema": {
				"json": {
					"type": "object"
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "download_image_into_catalog",
			"description": "Use this tool to download images from a URL into the image catalog. You only download freely available images. You find the link/URL browsing or searching the internet. Wikipedia pages often contain images that you can download.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"url": {
							"type": "string",
							"description": "The public URL link (https://...) to download the image from."
						}
					},
					"required": [
						"url"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "personal_improvement",
			"description": "Use this tool to track suggestions and mistake and to find ways to improve for the future. Collect suggestions or find pratical improvements that will be added to your system prompt. Improvements are generic and not specific to a single question.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"command": {
							"type": "string",
							"description": "Can be either 'show_improvements' or 'update_improvements'. When updating improvements, you replace all previous improvements with the new text. Include previous improvements in the updated text to keep them."
						},
						"improvements": {
							"type": "string",
							"description": "A full long paragraph describing all the improvements. These improvements are added to your system prompt to avoid making the same mistakes again. The value of this field replaces all previous improvements."
						}
					},
					"required": [
						"command"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "arxiv",
			"description": "Use this tool to search and automatically download scientific research articles from arXiv. This is the preferred way to download academic papers. The articles found by this tool are stored in the archive, and you must then retrieve the information you need from the archive.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"query": {
							"type": "string",
							"description": "The query used to look for and automatically download scientific papers on arXiv."
						},
						"max_results": {
							"type": "string",
							"description": "The maximum number of results from the query."
						}
					},
					"required": [
						"query"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "save_text_file",
			"description": "Use this tool to save a text file in output. The file can contain Markdown or plain text. Don't use this tool for binary content like images. The file is saved in the output folder. The filename must be unique.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"content": {
							"type": "string",
							"description": "The text content of the file. The content cannot be longer than a thousand words. For long content, use the 'sketchbook' tool."
						},
						"filename": {
							"type": "string",
							"description": "The output filename with no path."
						},
						"code_fence_language": {
							"type": "string",
							"description": "The syntax highlighting programming language identifier for the Markdown code fence. For example, 'python' for Python code, 'bash' for shell code, 'json' for JSON code, etc."
						}
					},
					"required": [
						"filename",
						"content",
						"code_fence_language"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "check_if_file_exists",
			"description": "Use this tool to check if a file exists in the output folder.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"filename": {
							"type": "string",
							"description": "The filename to check with no path."
						}
					},
					"required": [
						"filename"
					]
				}
			}
		}
	},
	{
		"toolSpec": {
			"name": "conversation",
			"description": "Use this tool to transform content into an entertaining professional conversation between friendly peers. Choose between 2 to 4 peers from this list: <voices>Ruth (US), Matthew (US), Stephen (US), Danielle (US), Johanna (US), Amy (British), Olivia (Australian), Kajal (Indian), Ayanda (South African)</voices>. The conversation explains content in detail by asking and answering questions. Jump straight to the first topic without introductions. Cover all topics in order. The output is written to an audio file.",
			"inputSchema": {
				"json": {
					"type": "object",
					"properties": {
						"num_participants": {
							"type": "integer",
							"description": "The number of participants in the conversation."
						},
						"conversation": {
							"type": "string",
							"description": "The script of the conversation in this JSON format: [ { \"name\": \"...\", \"line\": \"<speak>...</speak>\" }, ... ]. Don't mention participant names in the script lines. Make the conversation sound natural using these SSML tags between the <speak> tags: <break>, <lang>, <mark>, <p>, <s>, <say-as>, <speak>, <sub>, <w>. The <say-as> tag can use only the interpret-as attribute with these exact values:/n- characters or spell-out: Spells out each letter of the text, as in a-b-c./n- cardinal or number: Interprets the numerical text as a cardinal number, as in 1,234./n- ordinal: Interprets the numerical text as an ordinal number, as in 1,234th./n- digits: Spells out each digit individually, as in 1-2-3-4./n- fraction: Interprets the numerical text as a fraction./n- unit: Interprets a numerical text as a measurement. The value should be either a number or a fraction followed by a unit with no space in between as in 1/2inch, or by just a unit, as in 1meter./n- date: Interprets the text as a date. The format of the date must be specified with the format attribute, for example: 'mdy' Month-day-year, 'dm' Day-month, or'y' Year./n- time: Interprets the numerical text as duration, in minutes and seconds, as in 1'21\"./n- address: Interprets the text as part of a street address./n- expletive: \"Beeps out\" the content included within the tag./n- telephone: Interprets the numerical text as a telephone number./nUse all appropriate SSML tags in a line."
						},
						"filename": {
							"type": "string",
							"description": "The filename (without extension) for the output audio file. I'll append the current date and time to the filename to make it unique."
						}
					},
					"required": [
						"num_participants",
						"conversation",
						"filename"
					]
				}
			}
		}
	}
]